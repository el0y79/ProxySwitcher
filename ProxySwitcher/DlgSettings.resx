<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>